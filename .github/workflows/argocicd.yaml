name: Build and Deploy C Application with Argo CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc make  # Install GCC and Make if using a Makefile

      - name: Build the application
        run: |
          make || gcc -o my_app main.c  # If you have a Makefile, it will use it; otherwise, it compiles `main.c`

      - name: Run Unit Tests
        run: |
          ./tests/test_suite  # Adjust this to your test suite's name and path
        continue-on-error: false  # Ensures the job fails if the test fails

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Only runs if the test job succeeds
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Argo CD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Login to Argo CD
        env:
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
          ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
        run: |
          argocd login $ARGOCD_SERVER --insecure --auth-token $ARGOCD_AUTH_TOKEN

      - name: Sync Argo CD Application
        run: |
          argocd app sync my-app || exit 1  # Replace "my-app" with your Argo CD app name

      - name: Wait for Argo CD App to Sync
        run: |
          argocd app wait my-app --sync || exit 1