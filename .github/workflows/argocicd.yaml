name: Build and Deploy Python Application with Argo CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Set Python version here

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Ensure requirements.txt exists in the root

      - name: Run Unit Tests
        run: |
          pytest tests/  # Make sure you have tests in the 'tests' folder or adjust this path accordingly
        continue-on-error: false  # Fail the job if tests fail

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Runs only if the test job is successful
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Argo CD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Login to Argo CD
        env:
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}  # Set this secret in GitHub Settings
          ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}  # Set this secret in GitHub Settings
        run: |
          argocd login $ARGOCD_SERVER --insecure --auth-token $ARGOCD_AUTH_TOKEN

      - name: Sync Argo CD Application
        run: |
          argocd app sync my-app || exit 1  # Replace "my-app" with the actual name of your Argo CD app

      - name: Wait for Argo CD App to Sync
        run: |
          argocd app wait my-app --sync || exit 1  # Wait until sync is complete